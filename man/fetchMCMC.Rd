% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/query-functions.R
\name{fetchMCMC}
\alias{fetchMCMC}
\title{Create a list of objects for analysis with package "coda".}
\usage{
fetchMCMC(filename, where = NULL, sample = NULL, thinned = TRUE)
}
\arguments{
\item{filename}{The name of the file where the output from the
\code{estimate} function is kept.}

\item{where}{A character vector used to select a single parameter or batch
of parameters.  See below for details.}

\item{sample}{Indices of parameters to be sampled.  Optional, and only
needed when there are many parameters.}

\item{thinned}{Logical.  If \code{TRUE}, the default, the
\code{"\link{mcmc.list}"} object or objects describe the thinned process.}
}
\value{
A single object of class \code{"\link{mcmc.list}"}, or a named list
of such objects.
}
\description{
Create an object of class \code{"\link{mcmc.list}"}, or a list of objects of
class \code{"mcmc.list"}, which can be analysed using the diagnostic
functions in package \pkg{coda}.
}
\details{
If no \code{where} argument is supplied, \code{\link[coda]{mcmc.list}}
objects are returned for every parameter or batch of parameters that were
estimated. If a \code{where} argument is supplied, it must describe the
path to parameter or parameters.  See \code{\link{fetch}} for more on
specifying paths.

If a batch of parameters has more than 25 elements, then, by default,
\code{fetchMCMC} extracts 25 randomly-chosen elements.  However, users can
control the selection of parameters throught the \code{sample} argument.
See below for an example.

If a model contains structuralZeros (\code{\link{Poisson}}),
then, unless an explicit \code{sample} is supplied,
cells corresponding to structural zeros are omitted from the sample.

If \code{thinned} is \code{TRUE}, then the \code{thin} argument in
\pkg{coda} function \code{\link[coda]{mcmc}} is set to 1; otherwise
\code{thin} is set to \code{nThin}, extracted from \code{object}.

If the model in question contains structural zeros (see \code{\link{Poisson}}),
some parameters of the model may be undefined. These parameters are omitted
from the results, unless they are specifically requested via the
\code{sample} argument.
}
\examples{
library(demdata)
## fit model
deaths <- Counts(round(VADeaths2))
popn <- Counts(VAPopn)
filename <- tempfile()
estimateModel(Model(y ~ Poisson(mean ~ age)),
              y = deaths,
              exposure = popn,
              filename = filename,
              nBurnin = 20,
              nSim = 20,
              nChain = 2,
              parallel = FALSE)

## create a list containing an "mcmc.list" object for
## every element of the results that was estimated
l <- fetchMCMC(filename)
names(l)
sapply(l, class)

## analyse using functions from 'coda'
\dontrun{
library(coda)
plot(l$model.likelihood.rate)
plot(l$model.likelihood.rate, ask = FALSE)
plot(l$model.likelihood.rate, ask = FALSE, smooth = FALSE)
gelman.diag(l$model.likelihood.rate)
}

## create a single "mcmc.list" object
mean.mcmc <- fetchMCMC(filename,
                  where = c("model", "likelihood", "rate"))

## only write part of each name
mean.mcmc <- fetchMCMC(filename, where = c("mod", "like", "r"))

## sample the first 5 values
mean.mcmc.5 <- fetchMCMC(filename,
                    where = c("model", "likelihood", "rate"),
                    sample = 1:5)
}
\seealso{
Other functions for examining output from
calls to \code{\link{estimateModel}}, \code{\link{estimateCounts}}, and
\code{\link{estimateAccount}} include \code{\link{fetch}},
\code{\link{fetchFiniteSD}}, and \code{\link{listContents}}.
}
