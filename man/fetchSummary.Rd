% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/query-functions.R
\name{fetchSummary}
\alias{fetchSummary}
\title{Summarise estimation output.}
\usage{
fetchSummary(filename)
}
\arguments{
\item{filename}{The filename used by the estimation or prediction
function.}
}
\value{
An object of class \code{\linkS4class{SummaryResults}}.
}
\description{
Summarise the results from \code{\link{estimateModel}},
\code{\link{estimateCounts}} or \code{\link{estimateAccount}}.
\code{fetchSummary} can also be called on results from prediction
functions, though doing so is generally less informative.
}
\section{Metropolis-Hastings updates}{


Depending on the model, one or more batches of parameters is updated
using Metropolis-Hasting updates.  \code{jump} is the standard
deviation of the propoposal density.  \code{acceptance} is the
proportion of proposals that are accepted.  \code{autocorrelation}
is the correlation between successive iterations, after thinning.
Autocorrelations are calculated separately, parameter by parameter,
and then averaged.  If a batch contains more than 25 parameters,
then 25 parameters are chosen at random, and autocorrelations calculated
only for that sample.

The Metropolis-Hastings statistics can be extracted from the summary
object using function \code{\link{metropolis}}.
}

\section{Parameters}{


Some parameters, such as  the rates in the likelihood for a Poisson
model (\code{model.likelihood.rate}), come in batches.
Others, such as the standard deviation in the prior for a Poisson
model (\code{model.prior.sd}), come on their own.  \code{length} shows
the length of each batch.

The quantiles summarise the distribution of the parameters across iterations,
and, if the batch has more than one element, among parameters within a batch.
For example, if a batch has 5 elements, and there are 1000 iterations,
then \code{parameters} shows (approximately) the quantiles that would
be obtained by calling function \code{quantile} on the combined
5 x 1000 = 5000 elements.  The results are only approximate because,
to save time, \code{parameters} samples at most 25 iterations.

The parameter summaries can be extracted using
function \code{\link{parameters}}.
}

\section{Rhat}{


Obtain potential scale reduction factors - i.e. the 'Rhats' for batches
of parameters.   The Rhats are calculated using function
\code{\link[coda]{gelman.diag}} from package \pkg{coda}.  However,
in line with  Gelman et al (2014: 284-286), each chain is split into two,
and the first and second halves compared, to capture variation within each chain,
in addition to variation across chains.

Potential scale reduction factors are used to diagnose convergence in MCMC
simulations.  Values close to 1 suggest that convergence has occurred.
See the references below for discussion.  A dot is shown next to a Rhat
if the value if greater than 1.1.

There is a multivariate of Rhat for use with batches of parameters,
but it is prone to numeric problems. \code{fetchSummary} calculates
Rhats parameter by parameter, and then reports the maximum value,
which is a conservative approach. To save time, if a batch of parameters
contains more than 25 elements, a sample of 25 parameters is extracted,
and Rhats calculated for those. The sampling introduces an element
of randomness: if \code{fetchSample} is called twice on the same
\code{filename} the results for \code{Rhat} will differ.

When the number of chains (\code{nChain}), the number of iterations
(\code{nSim}), or the proportion of proposals accepted is small,
estimated Rhats can be unstable.

If greater control over the calculation of Rhat is desired, parameter
estimates can be extracted using \code{\link{fetchMCMC}}, and
results calculated using \code{\link[coda]{gelman.diag}}.
}

\examples{
deaths <- demdata::VADeaths2
popn <- demdata::VAPopn
deaths <- round(deaths)
deaths <- Counts(deaths)
popn <- Counts(popn)
filename <- tempfile()
model <- Model(y ~ Poisson(mean ~ age + sex),
               jump = 0.5)
estimateModel(model = model,
              y = deaths,
              exposure = popn,
              filename = filename,
              nBurnin = 50,
              nSim = 50,
              nChain = 2,
              parallel = FALSE)
fetchSummary(filename)

## keep summary object and extract parts from it
summary.est <- fetchSummary(filename)
gelmanDiag(summary.est)
metropolis(summary.est)
parameters(summary.est)
}
\references{
Geyer, C. J. (2011) Introduction to Markov Chain Monte Carlo.
Brooks, S., Gelman, A., Jones, G., Meng, X-L (eds.) \emph{Handbook of Markov
Chain Monte Carlo}. CRC Press.

Gelman, A., Shirley, K. (2011) Inference from simulations and monitoring
convergence.  Brooks, S., Gelman, A., Jones, G., Meng, X-L (eds.)
\emph{Handbook of Markov Chain Monte Carlo}. CRC Press.

Gelman, A., Carlin, J.B., Stern, H.S. and Rubin, D.B., 2014.
\emph{Bayesian Ddata Analysis. Third Edition.} Boca Raton, FL, USA:
Chapman & Hall/CRC.
}
\seealso{
Individual components of the summary can be extracted
using functions \code{\link{metropolis}}, \code{\link{parameters}},
and \code{\link{gelmanDiag}}.  Parameter estimates from estimation
or prediction are obtained using function \code{fetch}.
}
